// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    public static RunShawn.Web.Controllers.AccountController Account = new RunShawn.Web.Controllers.T4MVC_AccountController();
    public static RunShawn.Web.Controllers.HomeController Home = new RunShawn.Web.Controllers.T4MVC_HomeController();
    public static RunShawn.Web.Controllers.ManageController Manage = new RunShawn.Web.Controllers.T4MVC_ManageController();
    public static RunShawn.Web.Controllers.MenusController Menus = new RunShawn.Web.Controllers.T4MVC_MenusController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public RunShawn.Web.Areas.Admin.Controllers.CategoriesController Categories = new RunShawn.Web.Areas.Admin.Controllers.T4MVC_CategoriesController();
        public RunShawn.Web.Areas.Admin.Controllers.DashboardController Dashboard = new RunShawn.Web.Areas.Admin.Controllers.T4MVC_DashboardController();
        public RunShawn.Web.Areas.Admin.Controllers.NewsController News = new RunShawn.Web.Areas.Admin.Controllers.T4MVC_NewsController();
        public RunShawn.Web.Areas.Admin.Controllers.UsersController Users = new RunShawn.Web.Areas.Admin.Controllers.T4MVC_UsersController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
}

#pragma warning disable 0436
namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}
#pragma warning restore 0436

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string bootstrap_datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.min.js") ? Url("bootstrap-datepicker.min.js") : Url("bootstrap-datepicker.js");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string jquery_2_1_3_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-2.1.3.intellisense.min.js") ? Url("jquery-2.1.3.intellisense.min.js") : Url("jquery-2.1.3.intellisense.js");
        public static readonly string jquery_3_3_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.3.1.intellisense.min.js") ? Url("jquery-3.3.1.intellisense.min.js") : Url("jquery-3.3.1.intellisense.js");
        public static readonly string jquery_3_3_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.3.1.min.js") ? Url("jquery-3.3.1.min.js") : Url("jquery-3.3.1.js");
        public static readonly string jquery_3_3_1_min_js = Url("jquery-3.3.1.min.js");
        public static readonly string jquery_3_3_1_min_map = Url("jquery-3.3.1.min.map");
        public static readonly string jquery_3_3_1_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.3.1.slim.min.js") ? Url("jquery-3.3.1.slim.min.js") : Url("jquery-3.3.1.slim.js");
        public static readonly string jquery_3_3_1_slim_min_js = Url("jquery-3.3.1.slim.min.js");
        public static readonly string jquery_3_3_1_slim_min_map = Url("jquery-3.3.1.slim.min.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class locales {
            public const string UrlPath = "~/Scripts/locales";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_datepicker_ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.ar.min.js") ? Url("bootstrap-datepicker.ar.min.js") : Url("bootstrap-datepicker.ar.js");
            public static readonly string bootstrap_datepicker_az_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.az.min.js") ? Url("bootstrap-datepicker.az.min.js") : Url("bootstrap-datepicker.az.js");
            public static readonly string bootstrap_datepicker_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.bg.min.js") ? Url("bootstrap-datepicker.bg.min.js") : Url("bootstrap-datepicker.bg.js");
            public static readonly string bootstrap_datepicker_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.ca.min.js") ? Url("bootstrap-datepicker.ca.min.js") : Url("bootstrap-datepicker.ca.js");
            public static readonly string bootstrap_datepicker_cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.cs.min.js") ? Url("bootstrap-datepicker.cs.min.js") : Url("bootstrap-datepicker.cs.js");
            public static readonly string bootstrap_datepicker_cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.cy.min.js") ? Url("bootstrap-datepicker.cy.min.js") : Url("bootstrap-datepicker.cy.js");
            public static readonly string bootstrap_datepicker_da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.da.min.js") ? Url("bootstrap-datepicker.da.min.js") : Url("bootstrap-datepicker.da.js");
            public static readonly string bootstrap_datepicker_de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.de.min.js") ? Url("bootstrap-datepicker.de.min.js") : Url("bootstrap-datepicker.de.js");
            public static readonly string bootstrap_datepicker_el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.el.min.js") ? Url("bootstrap-datepicker.el.min.js") : Url("bootstrap-datepicker.el.js");
            public static readonly string bootstrap_datepicker_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.es.min.js") ? Url("bootstrap-datepicker.es.min.js") : Url("bootstrap-datepicker.es.js");
            public static readonly string bootstrap_datepicker_et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.et.min.js") ? Url("bootstrap-datepicker.et.min.js") : Url("bootstrap-datepicker.et.js");
            public static readonly string bootstrap_datepicker_fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.fa.min.js") ? Url("bootstrap-datepicker.fa.min.js") : Url("bootstrap-datepicker.fa.js");
            public static readonly string bootstrap_datepicker_fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.fi.min.js") ? Url("bootstrap-datepicker.fi.min.js") : Url("bootstrap-datepicker.fi.js");
            public static readonly string bootstrap_datepicker_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.fr.min.js") ? Url("bootstrap-datepicker.fr.min.js") : Url("bootstrap-datepicker.fr.js");
            public static readonly string bootstrap_datepicker_gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.gl.min.js") ? Url("bootstrap-datepicker.gl.min.js") : Url("bootstrap-datepicker.gl.js");
            public static readonly string bootstrap_datepicker_he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.he.min.js") ? Url("bootstrap-datepicker.he.min.js") : Url("bootstrap-datepicker.he.js");
            public static readonly string bootstrap_datepicker_hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.hr.min.js") ? Url("bootstrap-datepicker.hr.min.js") : Url("bootstrap-datepicker.hr.js");
            public static readonly string bootstrap_datepicker_hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.hu.min.js") ? Url("bootstrap-datepicker.hu.min.js") : Url("bootstrap-datepicker.hu.js");
            public static readonly string bootstrap_datepicker_id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.id.min.js") ? Url("bootstrap-datepicker.id.min.js") : Url("bootstrap-datepicker.id.js");
            public static readonly string bootstrap_datepicker_is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.is.min.js") ? Url("bootstrap-datepicker.is.min.js") : Url("bootstrap-datepicker.is.js");
            public static readonly string bootstrap_datepicker_it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.it.min.js") ? Url("bootstrap-datepicker.it.min.js") : Url("bootstrap-datepicker.it.js");
            public static readonly string bootstrap_datepicker_ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.ja.min.js") ? Url("bootstrap-datepicker.ja.min.js") : Url("bootstrap-datepicker.ja.js");
            public static readonly string bootstrap_datepicker_ka_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.ka.min.js") ? Url("bootstrap-datepicker.ka.min.js") : Url("bootstrap-datepicker.ka.js");
            public static readonly string bootstrap_datepicker_kk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.kk.min.js") ? Url("bootstrap-datepicker.kk.min.js") : Url("bootstrap-datepicker.kk.js");
            public static readonly string bootstrap_datepicker_kr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.kr.min.js") ? Url("bootstrap-datepicker.kr.min.js") : Url("bootstrap-datepicker.kr.js");
            public static readonly string bootstrap_datepicker_lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.lt.min.js") ? Url("bootstrap-datepicker.lt.min.js") : Url("bootstrap-datepicker.lt.js");
            public static readonly string bootstrap_datepicker_lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.lv.min.js") ? Url("bootstrap-datepicker.lv.min.js") : Url("bootstrap-datepicker.lv.js");
            public static readonly string bootstrap_datepicker_mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.mk.min.js") ? Url("bootstrap-datepicker.mk.min.js") : Url("bootstrap-datepicker.mk.js");
            public static readonly string bootstrap_datepicker_ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.ms.min.js") ? Url("bootstrap-datepicker.ms.min.js") : Url("bootstrap-datepicker.ms.js");
            public static readonly string bootstrap_datepicker_nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.nb.min.js") ? Url("bootstrap-datepicker.nb.min.js") : Url("bootstrap-datepicker.nb.js");
            public static readonly string bootstrap_datepicker_nl_BE_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.nl-BE.min.js") ? Url("bootstrap-datepicker.nl-BE.min.js") : Url("bootstrap-datepicker.nl-BE.js");
            public static readonly string bootstrap_datepicker_nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.nl.min.js") ? Url("bootstrap-datepicker.nl.min.js") : Url("bootstrap-datepicker.nl.js");
            public static readonly string bootstrap_datepicker_no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.no.min.js") ? Url("bootstrap-datepicker.no.min.js") : Url("bootstrap-datepicker.no.js");
            public static readonly string bootstrap_datepicker_pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.pl.min.js") ? Url("bootstrap-datepicker.pl.min.js") : Url("bootstrap-datepicker.pl.js");
            public static readonly string bootstrap_datepicker_pt_BR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.pt-BR.min.js") ? Url("bootstrap-datepicker.pt-BR.min.js") : Url("bootstrap-datepicker.pt-BR.js");
            public static readonly string bootstrap_datepicker_pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.pt.min.js") ? Url("bootstrap-datepicker.pt.min.js") : Url("bootstrap-datepicker.pt.js");
            public static readonly string bootstrap_datepicker_ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.ro.min.js") ? Url("bootstrap-datepicker.ro.min.js") : Url("bootstrap-datepicker.ro.js");
            public static readonly string bootstrap_datepicker_rs_latin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.rs-latin.min.js") ? Url("bootstrap-datepicker.rs-latin.min.js") : Url("bootstrap-datepicker.rs-latin.js");
            public static readonly string bootstrap_datepicker_rs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.rs.min.js") ? Url("bootstrap-datepicker.rs.min.js") : Url("bootstrap-datepicker.rs.js");
            public static readonly string bootstrap_datepicker_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.ru.min.js") ? Url("bootstrap-datepicker.ru.min.js") : Url("bootstrap-datepicker.ru.js");
            public static readonly string bootstrap_datepicker_sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.sk.min.js") ? Url("bootstrap-datepicker.sk.min.js") : Url("bootstrap-datepicker.sk.js");
            public static readonly string bootstrap_datepicker_sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.sl.min.js") ? Url("bootstrap-datepicker.sl.min.js") : Url("bootstrap-datepicker.sl.js");
            public static readonly string bootstrap_datepicker_sq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.sq.min.js") ? Url("bootstrap-datepicker.sq.min.js") : Url("bootstrap-datepicker.sq.js");
            public static readonly string bootstrap_datepicker_sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.sv.min.js") ? Url("bootstrap-datepicker.sv.min.js") : Url("bootstrap-datepicker.sv.js");
            public static readonly string bootstrap_datepicker_sw_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.sw.min.js") ? Url("bootstrap-datepicker.sw.min.js") : Url("bootstrap-datepicker.sw.js");
            public static readonly string bootstrap_datepicker_th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.th.min.js") ? Url("bootstrap-datepicker.th.min.js") : Url("bootstrap-datepicker.th.js");
            public static readonly string bootstrap_datepicker_tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.tr.min.js") ? Url("bootstrap-datepicker.tr.min.js") : Url("bootstrap-datepicker.tr.js");
            public static readonly string bootstrap_datepicker_ua_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.ua.min.js") ? Url("bootstrap-datepicker.ua.min.js") : Url("bootstrap-datepicker.ua.js");
            public static readonly string bootstrap_datepicker_vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.vi.min.js") ? Url("bootstrap-datepicker.vi.min.js") : Url("bootstrap-datepicker.vi.js");
            public static readonly string bootstrap_datepicker_zh_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.zh-CN.min.js") ? Url("bootstrap-datepicker.zh-CN.min.js") : Url("bootstrap-datepicker.zh-CN.js");
            public static readonly string bootstrap_datepicker_zh_TW_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.zh-TW.min.js") ? Url("bootstrap-datepicker.zh-TW.min.js") : Url("bootstrap-datepicker.zh-TW.js");
        }
    
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class MvcGrid {
            public const string UrlPath = "~/Scripts/MvcGrid";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string mvc_grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mvc-grid.min.js") ? Url("mvc-grid.min.js") : Url("mvc-grid.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class nprogress {
            public const string UrlPath = "~/Scripts/nprogress";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string nprogress_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nprogress.min.js") ? Url("nprogress.min.js") : Url("nprogress.js");
        }
    
        public static readonly string sidebar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/sidebar.min.js") ? Url("sidebar.min.js") : Url("sidebar.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class summernote {
            public const string UrlPath = "~/Scripts/summernote";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string summernote_init_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/summernote-init.min.js") ? Url("summernote-init.min.js") : Url("summernote-init.js");
            public static readonly string summernote_lite_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/summernote-lite.min.js") ? Url("summernote-lite.min.js") : Url("summernote-lite.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class tooltip {
            public const string UrlPath = "~/Scripts/tooltip";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_darktooltip_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.darktooltip.min.js") ? Url("jquery.darktooltip.min.js") : Url("jquery.darktooltip.js");
            public static readonly string tooltipCustom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tooltipCustom.min.js") ? Url("tooltipCustom.min.js") : Url("tooltipCustom.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class validate {
            public const string UrlPath = "~/Scripts/validate";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-validate.min.js") ? Url("bootstrap-validate.min.js") : Url("bootstrap-validate.js");
            public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
            public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
            public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
            public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
            public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class article {
            public const string UrlPath = "~/Content/article";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/style.min.css") ? Url("style.min.css") : Url("style.css");
            public static readonly string style_css_map = Url("style.css.map");
            public static readonly string style_scss = Url("style.scss");
        }
    
        public static readonly string bootstrap_datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.min.css") ? Url("bootstrap-datepicker.min.css") : Url("bootstrap-datepicker.css");
        public static readonly string bootstrap_datepicker3_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker3.min.css") ? Url("bootstrap-datepicker3.min.css") : Url("bootstrap-datepicker3.css");
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
        public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_theme_min_css_map = Url("bootstrap-theme.min.css.map");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class dashboard {
            public const string UrlPath = "~/Content/dashboard";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string dashboard_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dashboard.min.css") ? Url("dashboard.min.css") : Url("dashboard.css");
            public static readonly string dashboard_css_map = Url("dashboard.css.map");
            public static readonly string dashboard_scss = Url("dashboard.scss");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            public const string UrlPath = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
            public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
            public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
            public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
            public static readonly string glyphicons_halflings_regular_woff2 = Url("glyphicons-halflings-regular.woff2");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            public const string UrlPath = "~/Content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class article_images {
                public const string UrlPath = "~/Content/images/article-images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string article_background1_png = Url("article-background1.png");
                public static readonly string article_background2_png = Url("article-background2.png");
                public static readonly string article_background3_png = Url("article-background3.png");
                public static readonly string article_background4_png = Url("article-background4.png");
                public static readonly string article_background5_png = Url("article-background5.png");
                public static readonly string article_background6_png = Url("article-background6.png");
                public static readonly string article_background7_png = Url("article-background7.png");
                public static readonly string article_background8_png = Url("article-background8.png");
                public static readonly string article_background9_png = Url("article-background9.png");
            }
        
            public static readonly string background_png = Url("background.png");
            public static readonly string user_png = Url("user.png");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class login {
            public const string UrlPath = "~/Content/login";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string login_form_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/login_form.min.css") ? Url("login_form.min.css") : Url("login_form.css");
            public static readonly string login_form_css_map = Url("login_form.css.map");
            public static readonly string login_form_scss = Url("login_form.scss");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class modal {
            public const string UrlPath = "~/Content/modal";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string modal_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modal.min.css") ? Url("modal.min.css") : Url("modal.css");
            public static readonly string modal_css_map = Url("modal.css.map");
            public static readonly string modal_scss = Url("modal.scss");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class MvcGrid {
            public const string UrlPath = "~/Content/MvcGrid";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Fonts {
                public const string UrlPath = "~/Content/MvcGrid/Fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string GridGlyphs_woff = Url("GridGlyphs.woff");
            }
        
            public static readonly string mvc_grid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mvc-grid.min.css") ? Url("mvc-grid.min.css") : Url("mvc-grid.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class nprogress {
            public const string UrlPath = "~/Content/nprogress";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string nprogress_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nprogress.min.css") ? Url("nprogress.min.css") : Url("nprogress.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class site {
            public const string UrlPath = "~/Content/site";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/site.min.css") ? Url("site.min.css") : Url("site.css");
            public static readonly string site_css_map = Url("site.css.map");
            public static readonly string site_scss = Url("site.scss");
        }
    
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class summernote {
            public const string UrlPath = "~/Content/summernote";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class font {
                public const string UrlPath = "~/Content/summernote/font";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string summernote_eot = Url("summernote.eot");
                public static readonly string summernote_ttf = Url("summernote.ttf");
                public static readonly string summernote_woff = Url("summernote.woff");
            }
        
            public static readonly string summernote_lite_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/summernote-lite.min.css") ? Url("summernote-lite.min.css") : Url("summernote-lite.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class tooltip {
            public const string UrlPath = "~/Content/tooltip";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string darktooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/darktooltip.min.css") ? Url("darktooltip.min.css") : Url("darktooltip.css");
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class locales 
            {
                public static class Assets
                {
                    public static readonly string bootstrap_datepicker_ar_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.ar.js"); 
                    public static readonly string bootstrap_datepicker_az_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.az.js"); 
                    public static readonly string bootstrap_datepicker_bg_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.bg.js"); 
                    public static readonly string bootstrap_datepicker_ca_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.ca.js"); 
                    public static readonly string bootstrap_datepicker_cs_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.cs.js"); 
                    public static readonly string bootstrap_datepicker_cy_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.cy.js"); 
                    public static readonly string bootstrap_datepicker_da_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.da.js"); 
                    public static readonly string bootstrap_datepicker_de_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.de.js"); 
                    public static readonly string bootstrap_datepicker_el_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.el.js"); 
                    public static readonly string bootstrap_datepicker_es_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.es.js"); 
                    public static readonly string bootstrap_datepicker_et_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.et.js"); 
                    public static readonly string bootstrap_datepicker_fa_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.fa.js"); 
                    public static readonly string bootstrap_datepicker_fi_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.fi.js"); 
                    public static readonly string bootstrap_datepicker_fr_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.fr.js"); 
                    public static readonly string bootstrap_datepicker_gl_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.gl.js"); 
                    public static readonly string bootstrap_datepicker_he_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.he.js"); 
                    public static readonly string bootstrap_datepicker_hr_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.hr.js"); 
                    public static readonly string bootstrap_datepicker_hu_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.hu.js"); 
                    public static readonly string bootstrap_datepicker_id_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.id.js"); 
                    public static readonly string bootstrap_datepicker_is_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.is.js"); 
                    public static readonly string bootstrap_datepicker_it_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.it.js"); 
                    public static readonly string bootstrap_datepicker_ja_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.ja.js"); 
                    public static readonly string bootstrap_datepicker_ka_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.ka.js"); 
                    public static readonly string bootstrap_datepicker_kk_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.kk.js"); 
                    public static readonly string bootstrap_datepicker_kr_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.kr.js"); 
                    public static readonly string bootstrap_datepicker_lt_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.lt.js"); 
                    public static readonly string bootstrap_datepicker_lv_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.lv.js"); 
                    public static readonly string bootstrap_datepicker_mk_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.mk.js"); 
                    public static readonly string bootstrap_datepicker_ms_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.ms.js"); 
                    public static readonly string bootstrap_datepicker_nb_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.nb.js"); 
                    public static readonly string bootstrap_datepicker_nl_BE_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.nl-BE.js"); 
                    public static readonly string bootstrap_datepicker_nl_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.nl.js"); 
                    public static readonly string bootstrap_datepicker_no_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.no.js"); 
                    public static readonly string bootstrap_datepicker_pl_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.pl.js"); 
                    public static readonly string bootstrap_datepicker_pt_BR_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.pt-BR.js"); 
                    public static readonly string bootstrap_datepicker_pt_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.pt.js"); 
                    public static readonly string bootstrap_datepicker_ro_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.ro.js"); 
                    public static readonly string bootstrap_datepicker_rs_latin_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.rs-latin.js"); 
                    public static readonly string bootstrap_datepicker_rs_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.rs.js"); 
                    public static readonly string bootstrap_datepicker_ru_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.ru.js"); 
                    public static readonly string bootstrap_datepicker_sk_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.sk.js"); 
                    public static readonly string bootstrap_datepicker_sl_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.sl.js"); 
                    public static readonly string bootstrap_datepicker_sq_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.sq.js"); 
                    public static readonly string bootstrap_datepicker_sv_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.sv.js"); 
                    public static readonly string bootstrap_datepicker_sw_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.sw.js"); 
                    public static readonly string bootstrap_datepicker_th_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.th.js"); 
                    public static readonly string bootstrap_datepicker_tr_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.tr.js"); 
                    public static readonly string bootstrap_datepicker_ua_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.ua.js"); 
                    public static readonly string bootstrap_datepicker_vi_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.vi.js"); 
                    public static readonly string bootstrap_datepicker_zh_CN_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.zh-CN.js"); 
                    public static readonly string bootstrap_datepicker_zh_TW_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/locales/bootstrap-datepicker.zh-TW.js"); 
                }
            }
            public static partial class MvcGrid 
            {
                public static class Assets
                {
                    public static readonly string mvc_grid_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/MvcGrid/mvc-grid.js"); 
                }
            }
            public static partial class nprogress 
            {
                public static class Assets
                {
                    public static readonly string nprogress_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/nprogress/nprogress.js"); 
                }
            }
            public static partial class summernote 
            {
                public static class Assets
                {
                    public static readonly string summernote_init_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/summernote/summernote-init.js"); 
                    public static readonly string summernote_lite_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/summernote/summernote-lite.js"); 
                }
            }
            public static partial class tooltip 
            {
                public static class Assets
                {
                    public static readonly string jquery_darktooltip_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/tooltip/jquery.darktooltip.js"); 
                    public static readonly string tooltipCustom_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/tooltip/tooltipCustom.js"); 
                }
            }
            public static partial class validate 
            {
                public static class Assets
                {
                    public static readonly string bootstrap_validate_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/validate/bootstrap-validate.js"); 
                    public static readonly string jquery_validate_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/validate/jquery.validate.js"); 
                    public static readonly string jquery_validate_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/validate/jquery.validate.min.js"); 
                    public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/validate/jquery.validate.unobtrusive.js"); 
                    public static readonly string jquery_validate_unobtrusive_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/validate/jquery.validate.unobtrusive.min.js"); 
                }
            }
            public static class Assets
            {
                public static readonly string bootstrap_datepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datepicker.js"); 
                public static readonly string bootstrap_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.js"); 
                public static readonly string bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.min.js"); 
                public static readonly string jquery_2_1_3_intellisense_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-2.1.3.intellisense.js"); 
                public static readonly string jquery_3_3_1_intellisense_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.intellisense.js"); 
                public static readonly string jquery_3_3_1_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.js"); 
                public static readonly string jquery_3_3_1_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.min.js"); 
                public static readonly string jquery_3_3_1_slim_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.slim.js"); 
                public static readonly string jquery_3_3_1_slim_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-3.3.1.slim.min.js"); 
                public static readonly string modernizr_2_8_3_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/modernizr-2.8.3.js"); 
                public static readonly string sidebar_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/sidebar.js"); 
            }
        }
        public static partial class Content 
        {
            public static partial class article 
            {
                public static class Assets
                {
                    public static readonly string style_css = T4MVCHelpers.ProcessAssetPath("~/Content/article/style.css");
                }
            }
            public static partial class dashboard 
            {
                public static class Assets
                {
                    public static readonly string dashboard_css = T4MVCHelpers.ProcessAssetPath("~/Content/dashboard/dashboard.css");
                }
            }
            public static partial class fonts 
            {
                public static class Assets
                {
                }
            }
            public static partial class images 
            {
                public static partial class article_images 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class login 
            {
                public static class Assets
                {
                    public static readonly string login_form_css = T4MVCHelpers.ProcessAssetPath("~/Content/login/login_form.css");
                }
            }
            public static partial class modal 
            {
                public static class Assets
                {
                    public static readonly string modal_css = T4MVCHelpers.ProcessAssetPath("~/Content/modal/modal.css");
                }
            }
            public static partial class MvcGrid 
            {
                public static partial class Fonts 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public static readonly string mvc_grid_css = T4MVCHelpers.ProcessAssetPath("~/Content/MvcGrid/mvc-grid.css");
                }
            }
            public static partial class nprogress 
            {
                public static class Assets
                {
                    public static readonly string nprogress_css = T4MVCHelpers.ProcessAssetPath("~/Content/nprogress/nprogress.css");
                }
            }
            public static partial class site 
            {
                public static class Assets
                {
                    public static readonly string site_css = T4MVCHelpers.ProcessAssetPath("~/Content/site/site.css");
                }
            }
            public static partial class summernote 
            {
                public static partial class font 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public static readonly string summernote_lite_css = T4MVCHelpers.ProcessAssetPath("~/Content/summernote/summernote-lite.css");
                }
            }
            public static partial class tooltip 
            {
                public static class Assets
                {
                    public static readonly string darktooltip_css = T4MVCHelpers.ProcessAssetPath("~/Content/tooltip/darktooltip.css");
                }
            }
            public static class Assets
            {
                public static readonly string bootstrap_datepicker_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-datepicker.css");
                public static readonly string bootstrap_datepicker3_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-datepicker3.css");
                public static readonly string bootstrap_theme_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-theme.css");
                public static readonly string bootstrap_theme_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap-theme.min.css");
                public static readonly string bootstrap_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap.css");
                public static readonly string bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/bootstrap.min.css");
                public static readonly string Site_css = T4MVCHelpers.ProcessAssetPath("~/Content/Site.css");
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    private static string ProcessAssetPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and should retain this prefix
        return virtualPath;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;
    public static Func<string, string> ProcessAssetPath = ProcessAssetPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


