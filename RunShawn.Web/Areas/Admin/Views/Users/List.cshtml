@{
    ViewBag.Title = "List";
}

@using RunShawn.Web.Areas.Admin.Models.Users
@model IEnumerable<UserListViewModel>

@using (Html.Bootstrap().Heading2().Begin())
{
    <text>Użytkownicy</text>
}
@using (var group = Html.Bootstrap().ButtonGroup().Begin())
{
    @group.LinkButton("Dodaj", MVC.Admin.Users.Create()).SetIcon(Icon.Plus).SetState(ButtonState.Success)
}

@(
    Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.FullName).Titled("Imię i Nazwisko");
        columns.Add(model => model.Scores).Titled("Punkty").AppendCss("points");
        columns.Add().Titled("Akcje").Encoded(false).RenderedAs(model =>
    (
        Html.Bootstrap().LinkButton("Edytuj", MVC.Admin.Users.Edit(model.Id))
        .SetIcon(Icon.Edit)
        .SetState(ButtonState.Warning)
        .SetSize(ButtonSize.Sm)
        .ToHtmlString() 
        +
        Html.Bootstrap().LinkButton("Usuń", MVC.Admin.Users.Delete(model.Id))
        .AddCss("btn-remove")
        .SetIcon(Icon.Remove)
        .SetState(ButtonState.Danger)
        .SetSize(ButtonSize.Sm)
        .ToHtmlString()
        +
        Html.Bootstrap().LinkButton("Punkty").SetId(model.Id)
        .AddCss("edit-button")
        .SetIcon(Icon.Refresh)
        .SetState(ButtonState.Success)
        .SetSize(ButtonSize.Sm)
        .ToHtmlString()
    )

    );
    })
    .Empty("Brak Wyników")
        .Filterable()
        .Sortable()
        .Pageable()
)

<div class="modal" id="scores-edit-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edycja punktów</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        </div>
    </div>
</div>
<script>
</script>