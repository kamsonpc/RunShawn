@{
    ViewBag.Title = "List";
}

@using RunShawn.Web.Areas.Admin.Models.Users
@model IEnumerable<UserListViewModel>

@using (Html.Bootstrap().Heading2().Begin())
{
    <text>Użytkownicy</text>
}
@using (var group = Html.Bootstrap().ButtonGroup().Begin())
{
    @group.LinkButton("Dodaj", MVC.Admin.Users.Create()).SetIcon(Icon.Plus).SetState(ButtonState.Success)
}

@(
    Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.UserName).Titled("Login");
        columns.Add(model => model.FirstName).Titled("Imię");
        columns.Add(model => model.LastName).Titled("Nazwisko");
        columns.Add(model => model.Email).Titled("Email");
        columns.Add().Titled("Akcje").Encoded(false).RenderedAs(model =>
    (
        Html.Bootstrap().LinkButton("Edytuj", MVC.Admin.Users.Edit(model.Id))
        .SetIcon(Icon.Edit)
        .SetState(ButtonState.Warning)
        .SetSize(ButtonSize.Sm)
        .ToHtmlString() 
        +
        Html.Bootstrap().LinkButton("Usuń", MVC.Admin.Users.Delete(model.Id))
        .AddCss("btn-remove")
        .SetIcon(Icon.Remove)
        .SetState(ButtonState.Danger)
        .SetSize(ButtonSize.Sm)
        .ToHtmlString()
    )

    );
    })
    .Empty("Brak Wyników")
        .Filterable()
        .Sortable()
        .Pageable()
)
